name: CI

on:
  push:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_VERSION: 'latest'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'


      - name: make oauth.yml
        run: |
          cd ./dplanner/src/main/resources
          touch ./application-oauth.yml
          echo "${{secrets.OAUTH}}" > ./application-oauth.yml
        shell: bash

      - name: make firebase adminsdk json
        run: |
          cd ./dplanner/src/main/resources
          touch ./dplanner-firebase-adminsdk.json
          echo "${{secrets.FIREBASE}}" > ./dplanner-firebase-adminsdk.json
        shell: bash

      - name: Substitute environment variables
        run: |
          sed -i "s#\\${DB_USER}/${{ secrets.DB_USER }}/" ./dplanner/src/main/resources/application-production.yml
          sed -i "s#\\${DB_PASSWORD}/${{ secrets.DB_PASSWORD }}/" ./dplanner/src/main/resources/application-production.yml
          sed -i "s#\\${AWS_S3_ACCESSKEY}/${{ secrets.AWS_S3_ACCESSKEY }}/" ./dplanner/src/main/resources/application-production.yml
          sed -i "s#\\${AWS_S3_SECRETKEY}/${{ secrets.AWS_S3_SECRETKEY }}/" ./dplanner/src/main/resources/application-production.yml
        shell: bash

      - name : Substitute environment variables (PROD)
        if: contains(github.ref,'main')
        run: |
          sed -i "s#\\${DB_URL}#${{ secrets.DB_URL_PROD }}#" ./dplanner/src/main/resources/application-production.yml
        shell : bash

      - name: Substitute environment variables (DEV)
        if: contains(github.ref,'develop')
        run: |
          sed -i "s#\\${DB_URL}#${{ secrets.DB_URL_DEV }}#" ./dplanner/src/main/resources/application-production.yml
        shell: bash

      - name: Build with Gradle
        run: |
          cd ./dplanner
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Build Docker image
        run: sudo docker build --no-cache -t dplanner/api:${{ env.DOCKER_IMAGE_VERSION }} -f ./dplanner/deploy/Dockerfile . --platform linux/x86_64

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: sudo docker push dplanner/api:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Clean Docker image
        run: sudo docker rmi dplanner/api:${{ env.DOCKER_IMAGE_VERSION }}
